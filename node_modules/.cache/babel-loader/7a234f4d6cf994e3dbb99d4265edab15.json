{"ast":null,"code":"var _jsxFileName = \"/Users/arawat/WebstormProjects/we-cabs-app/src/hooks/PrivateRoute.tsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLogin } from '../middlewear/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  const condition = isLogin();\n  return condition ? /*#__PURE__*/_jsxDEV(Route, {\n    path: props.path,\n    exact: props.exact,\n    component: props.component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 108\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/arawat/WebstormProjects/we-cabs-app/src/hooks/PrivateRoute.tsx"],"names":["React","Route","Redirect","isLogin","PrivateRoute","props","condition","path","exact","component"],"mappings":";AAAA,OAAQA,KAAR,MAAoB,OAApB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAiC,kBAAjC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;;AAEA,MAAOC,YAID,GAAIC,KAAD,IAAW;AAChB,QAAMC,SAAS,GAAGH,OAAO,EAAzB;AACA,SAAQG,SAAS,gBAAI,QAAC,KAAD;AAAQ,IAAA,IAAI,EAAED,KAAK,CAACE,IAApB;AAA2B,IAAA,KAAK,EAAEF,KAAK,CAACG,KAAxC;AAA+C,IAAA,SAAS,EAAEH,KAAK,CAACI;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAJ,gBAAsF,QAAC,QAAD;AAAW,IAAA,EAAE,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,UAAvG;AACH,CAPD;;KAAOL,Y;AAQP,eAAiBA,YAAjB","sourcesContent":["import  React from  \"react\";\r\nimport { Route, Redirect } from  \"react-router-dom\";\r\nimport {isLogin} from '../middlewear/auth'\r\n\r\nconst  PrivateRoute: React.FC<{\r\n        component: any;\r\n        path: string;\r\n        exact: boolean;\r\n    }> = (props) => {\r\n    const condition = isLogin();\r\n    return  condition ? (<Route  path={props.path}  exact={props.exact} component={props.component} />) : (<Redirect  to=\"/login\"/>);\r\n};\r\nexport  default  PrivateRoute;"]},"metadata":{},"sourceType":"module"}